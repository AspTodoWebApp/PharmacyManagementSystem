@model PharmacyManagementSystem.Models.CreatePOS

@{
    ViewBag.Title = "Create";
}
<div>@Html.Raw(TempData["msg"])</div>
<div class="panel panel-default" style="box-shadow:2px 2px 5px grey">
    <div class="panel-heading">
        <span class="glyphicon glyphicon-plus-sign">

        </span>
        Point Of Sale
    </div>
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>

@*autocomplete end *@

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @*   <input class="form-control" id="Name" type="text" name="Name" />*@

                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*  @Html.EditorFor(model => model.Category, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownListFor(model => model.Category, new SelectList(" "), "--Select State--", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control" } })


                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.Discount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-6">
                @Html.EditorFor(model => model.Discount, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Discount, "", new { @class = "text-danger" })

            </div>
            <div class="col-md-2 pull-right"><button class="btn btn-success">Add Item</button></div>

        </div>
    </div>

    <div class="col-lg-12">
        <table class="table table-bordered table-hover bg-white" style="text-align:center">
            <thead class="bg-primary text-white">
                <tr>
                    <th>
                        Name
                    </th>
                    <th>
                        Category
                    </th>
                    <th>
                        Quantity
                    </th>
                    <th>
                        SubTotal
                    </th>

                    <th>Options</th>
                </tr>
            </thead>

            <tbody>

                @foreach (var item in Model.orderList)
                {

                    <tr>
                        <td>@Html.DisplayFor(modelItem => item.Name)</td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Category)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Quantity)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.SubTotal)
                        </td>

                        <td>

                            @Html.ActionLink("Edit", "Edit", new { id = item.SerialNumber },
                      new { @class = "btn btn-success" })

                            <button type="button" class="btn btn-danger btn-xs" onclick="confirmDelete();"><span class="glyphicon glyphicon-trash"></span>Delete</button>

                        </td>
                    </tr>
                }
            </tbody>


        </table>
    </div>
    @* </div>ShowBill
            </div>
        </div>*@
if (Model.orderList.Count > 0)
{
    <div class="col-md-offset-2 col-md-10" style="margin-top:10px">

        @Html.ActionLink("Print", "ShowBill", new { id = Model.orderList.FirstOrDefault().OrderId },
                      new { @class = "btn btn-success" })

    </div>
}
else
{
    <div class="col-md-offset-2 col-md-10" style="margin-top:10px">

        @Html.ActionLink("Print", "ShowBill", null, new { @class = "btn btn-default disabled" })

    </div> }
    @*
                            <div class="col-md-offset-2 col-md-10" style="margin-top:10px">
                                <input type="submit" value="Print Bill" class="btn btn-success" onclick="printContent('CustomerBill')" />

                            </div>
                            <div id="CustomerBill" style="align-content:center" class="invisible">
                                <h1>Pharmacy Management System</h1>
                                <p>Customer Receipt</p>
                                <table class="table table-bordered">
                                    <tr>
                                        <th>Name</th>
                                        <th>Type</th>
                                        <th>Unity Price</th>
                                        <th>QTY</th>
                                        <th>Total</th>
                                    </tr>
                                    <tr>
                                        <td>Panadol</td>
                                        <td>Tablet</td>
                                        <td>2.0</td>
                                        <td>5</td>
                                        <td>10</td>
                                    </tr>

                                </table>
                                <dl class="dl-horizontal">
                                    <dt>SubTotal</dt>
                                    <dd>10</dd>
                                    <dt>Discount</dt>
                                    <dd>0</dd>
                                    <dt>SubTotal</dt>
                                    <dt>Grand Total</dt>
                                    <dd>20</dd>
                                </dl>
                            </div>

        autocomplete script start*@
    <script>
    $("#Name").autocomplete({

        source: function (request, response) {
            $.ajax({
                url: '@Url.Action("GetSearchValue","Finance")',
                dataType: "json",
                data: { search: $("#Name").val() },
                success: function (data) {
                    response($.map(data, function (item) {
                   return { label: item.Name , value: item.Name

                        };
                    }));
                },

               error: function (xhr, status, error) {
                    alert("Error");
                }
            });
        }
    });
    </script>
    <script src="~/Scripts/jquery-1.10.2.min.js"></script>
    <script>
    $(document).ready(function () {
        $("#Name").change(function () {
            $.get("/Finance/GetStateList", { CountryId: $("#Name").val() }, function (data) {
                $("#Category").empty();
                $.each(data, function (index, row) {
                    $("#Category").append("<option value='" + row.Category + "'>" + row.Category + "</option>")
                });
            });
        })
    });
    </script>
    @*autcomplete method end script*@

}



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
